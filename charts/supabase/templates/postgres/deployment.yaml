apiVersion: apps/v1
kind: Deployment
metadata:
  name: supabase-db
  labels:
    app: supabase
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: supabase
      component: database
  template:
    metadata:
      labels:
        app: supabase
        component: database
    spec:

      containers:
        - name: postgres
          image: supabase/postgres:15.8.1.105
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: supabase-db-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: supabase-db-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: "postgres"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: supabase-db-secret
                  key: POSTGRES_PASSWORD
            - name: PGDATABASE
              value: "postgres"
            - name: POSTGRES_HOST
              value: "/var/run/postgresql"
            - name: PGPORT
              value: "5432"
            - name: POSTGRES_PORT
              value: "5432"
            - name: PGDATA
              value: "/var/lib/postgresql/data"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: supabase-db-secret
                  key: JWT_SECRET
            - name: JWT_EXP
              value: "3600"
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
              subPath: pgdata
            - name: custom-scripts
              mountPath: /docker-entrypoint-initdb.d/migrations/97-_supabase.sql
              subPath: 97-_supabase.sql
              readOnly: true
            - name: custom-scripts
              mountPath: /docker-entrypoint-initdb.d/init-scripts/98-webhooks.sql
              subPath: 98-webhooks.sql
              readOnly: true
            - name: custom-scripts
              mountPath: /docker-entrypoint-initdb.d/init-scripts/99-roles.sql
              subPath: 99-roles.sql
              readOnly: true
            - name: custom-scripts
              mountPath: /docker-entrypoint-initdb.d/init-scripts/99-jwt.sql
              subPath: 99-jwt.sql
              readOnly: true
            - name: custom-scripts
              mountPath: /docker-entrypoint-initdb.d/migrations/99-realtime.sql
              subPath: 99-realtime.sql
              readOnly: true
            - name: custom-scripts
              mountPath: /docker-entrypoint-initdb.d/migrations/99-logs.sql
              subPath: 99-logs.sql
              readOnly: true
            - name: custom-scripts
              mountPath: /docker-entrypoint-initdb.d/migrations/99-pooler.sql
              subPath: 99-pooler.sql
              readOnly: true
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "$(POSTGRES_USER)"
                - -h
                - localhost
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "$(POSTGRES_USER)"
                - -h
                - localhost
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: supabase-db-pvc-v2
        - name: custom-scripts
          configMap:
            name: supabase-db-init-scripts

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supabase.fullname" . }}-db
  labels:
    {{- include "supabase.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "supabase.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "supabase.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      containers:
      - name: postgres
        image: {{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}
        imagePullPolicy: {{ .Values.database.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.postgres.port }}
          name: postgresql
        env:
        - name: POSTGRES_HOST
          value: "/var/run/postgresql"
        - name: PGPORT
          value: {{ .Values.postgres.port | quote }}
        - name: POSTGRES_PORT
          value: {{ .Values.postgres.port | quote }}
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "supabase.fullname" . }}-secrets
              key: postgres-password
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "supabase.fullname" . }}-secrets
              key: postgres-password
        - name: PGDATABASE
          value: {{ .Values.postgres.database | quote }}
        - name: POSTGRES_DB
          value: {{ .Values.postgres.database | quote }}
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "supabase.fullname" . }}-secrets
              key: jwt-secret
        - name: JWT_EXP
          value: {{ .Values.database.jwtExpiry | quote }}
        {{- with .Values.database.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        command:
        - "postgres"
        - "-c"
        - "config_file=/etc/postgresql/postgresql.conf"
        - "-c"
        - "log_min_messages=fatal"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
            - -h
            - localhost
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.database.resources | nindent 10 }}
      volumes:
      - name: postgres-data
        {{- if .Values.database.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "supabase.fullname" . }}-db-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: postgres-config
        configMap:
          name: {{ include "supabase.fullname" . }}-postgres-config
      - name: init-scripts
        configMap:
          name: {{ include "supabase.fullname" . }}-init-scripts 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supabase-meta
  labels:
    app: supabase-meta
    component: meta
spec:
  replicas: 1
  selector:
    matchLabels:
      app: supabase-meta
      component: meta
  template:
    metadata:
      labels:
        app: supabase-meta
        component: meta
    spec:
      # Add init container to wait for dependencies
      initContainers:
        - name: wait-for-db
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for database to be ready..."
              until nc -z supabase-db 5432; do
                echo "Database not ready, waiting..."
                sleep 2
              done
              echo "Database is ready!"
        - name: wait-for-analytics
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for analytics to be ready..."
              until nc -z supabase-analytics 4000; do
                echo "Analytics not ready, waiting..."
                sleep 2
              done
              echo "Analytics is ready!"
      containers:
        - name: meta
          image: supabase/postgres-meta:v0.89.3
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # Load environment variables from ConfigMap and Secret
          envFrom:
            - configMapRef:
                name: supabase-meta-config
            - secretRef:
                name: supabase-meta-secret

          # Health checks - postgres-meta doesn't have a specific health endpoint
          # so we'll use a simple TCP check
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3

          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi

{{- if .Values.analytics.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supabase.fullname" . }}-analytics
  labels:
    {{- include "supabase.labels" . | nindent 4 }}
    app.kubernetes.io/component: analytics
spec:
  replicas: {{ .Values.analytics.replicaCount }}
  selector:
    matchLabels:
      {{- include "supabase.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: analytics
  template:
    metadata:
      labels:
        {{- include "supabase.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: analytics
    spec:
      containers:
      - name: analytics
        image: {{ .Values.analytics.image.repository }}:{{ .Values.analytics.image.tag }}
        imagePullPolicy: {{ .Values.analytics.image.pullPolicy }}
        ports:
        - containerPort: 4000
          name: http
        env:
        {{- $defaultEnv := list }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "LOGFLARE_NODE_HOST" "value" "127.0.0.1") }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "DB_USERNAME" "value" "supabase_admin") }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "DB_DATABASE" "value" "_supabase") }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "DB_HOSTNAME" "value" (printf "%s-db" (include "supabase.fullname" .))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "DB_PORT" "value" (.Values.database.postgres.port | quote)) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "DB_USER" "value" "supabase_admin") }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "DB_PASSWORD" "valueFrom" (dict "secretKeyRef" (dict "name" (include "supabase.secretName" .) "key" "postgres-password"))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "DB_NAME" "value" "postgres") }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "DB_HOST" "value" (printf "%s-db" (include "supabase.fullname" .))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "DATABASE_URL" "value" (printf "ecto://supabase_admin:%s@%s-db:%s/_supabase" (.Values.secrets.postgresPassword | quote) (include "supabase.fullname" .) (.Values.database.postgres.port | quote))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "LOGFLARE_PUBLIC_ACCESS_TOKEN" "valueFrom" (dict "secretKeyRef" (dict "name" (include "supabase.secretName" .) "key" "logflare-public-access-token"))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "LOGFLARE_PRIVATE_ACCESS_TOKEN" "valueFrom" (dict "secretKeyRef" (dict "name" (include "supabase.secretName" .) "key" "logflare-private-access-token"))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "LOGFLARE_SINGLE_TENANT" "value" "true") }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "LOGFLARE_SUPABASE_MODE" "value" "true") }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "LOGFLARE_MIN_CLUSTER_SIZE" "value" "1") }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "POSTGRES_BACKEND_URL" "value" (printf "postgresql://supabase_admin:%s@%s-db:%s/_supabase" (.Values.secrets.postgresPassword | quote) (include "supabase.fullname" .) (.Values.database.postgres.port | quote))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "POSTGRES_BACKEND_SCHEMA" "value" "_analytics") }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "LOGFLARE_FEATURE_FLAG_OVERRIDE" "value" "multibackend=true") }}
        {{- include "supabase.envVars" (dict "env" $defaultEnv "overrides" .Values.analytics.envOverrides) | nindent 8 }}
        {{- with .Values.analytics.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        livenessProbe:
          {{- toYaml .Values.analytics.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.analytics.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.analytics.resources | nindent 10 }}
{{- end }} 
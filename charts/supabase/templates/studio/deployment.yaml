{{- if .Values.studio.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supabase.fullname" . }}-studio
  labels:
    {{- include "supabase.labels" . | nindent 4 }}
    app.kubernetes.io/component: studio
spec:
  replicas: {{ .Values.studio.replicaCount }}
  selector:
    matchLabels:
      {{- include "supabase.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: studio
  template:
    metadata:
      labels:
        {{- include "supabase.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: studio
    spec:
      containers:
      - name: studio
        image: {{ .Values.studio.image.repository }}:{{ .Values.studio.image.tag }}
        imagePullPolicy: {{ .Values.studio.image.pullPolicy }}
        ports:
        - containerPort: 3000
          name: http
        env:
        {{- $defaultEnv := list }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "STUDIO_PG_META_URL" "value" (printf "http://%s-meta:8080" (include "supabase.fullname" .))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "POSTGRES_PASSWORD" "valueFrom" (dict "secretKeyRef" (dict "name" (include "supabase.secretName" .) "key" "postgres-password"))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "DEFAULT_ORGANIZATION_NAME" "value" .Values.studio.environment.defaultOrganizationName) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "DEFAULT_PROJECT_NAME" "value" .Values.studio.environment.defaultProjectName) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "OPENAI_API_KEY" "value" .Values.studio.environment.openaiApiKey) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "SUPABASE_URL" "value" (printf "http://%s-kong:8000" (include "supabase.fullname" .))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "SUPABASE_PUBLIC_URL" "value" .Values.studio.environment.supabasePublicUrl) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "SUPABASE_ANON_KEY" "valueFrom" (dict "secretKeyRef" (dict "name" (include "supabase.secretName" .) "key" "anon-key"))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "SUPABASE_SERVICE_KEY" "valueFrom" (dict "secretKeyRef" (dict "name" (include "supabase.secretName" .) "key" "service-role-key"))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "AUTH_JWT_SECRET" "valueFrom" (dict "secretKeyRef" (dict "name" (include "supabase.secretName" .) "key" "jwt-secret"))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "LOGFLARE_PRIVATE_ACCESS_TOKEN" "valueFrom" (dict "secretKeyRef" (dict "name" (include "supabase.secretName" .) "key" "logflare-private-access-token"))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "LOGFLARE_URL" "value" (printf "http://%s-analytics:4000" (include "supabase.fullname" .))) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "NEXT_PUBLIC_ENABLE_LOGS" "value" .Values.studio.environment.nextPublicEnableLogs) }}
        {{- $defaultEnv = append $defaultEnv (dict "name" "NEXT_ANALYTICS_BACKEND_PROVIDER" "value" .Values.studio.environment.nextAnalyticsBackendProvider) }}
        {{- include "supabase.envVars" (dict "env" $defaultEnv "overrides" .Values.studio.envOverrides) | nindent 8 }}
        {{- with .Values.studio.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.studio.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.studio.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.studio.resources | nindent 10 }}
{{- end }} 